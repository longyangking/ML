% Single-objective 
fprintf('Single-objective: 1th function optimizing...\n');
fun = @(x)(x-2).^2;
LB = [0];  UB = [4]; 

gaopt = struct(...
    'Fitnessfunction', fun,...
    'Featuresize', 1,...
    'Targetsize', 1,...
    'LB',LB, ...
    'UB',UB, ...
    'IntCon',[],...
    'Constraintfunction',@(x)(zeros(size(x,1),1)),...  % No constraint
    'PopulationSize',100,...
    'InitialPopulations',[],...
    'EliteCount',5,...
    'CrossRatio',0.8,...
    'MutationRate',0.2,...
    'MaxIteration',100,...
    'Verbose',false,...
    'TournamentSize',3,...
    'Maxstall',50,...
    'Tolerance',1e-6,...
    'Creationfunction',@gaCreation,...
    'Fitnessscalefunction',@gaFitnessScale,...
    'Distancefunction',@gaPareto,...
    'Selectfunction',@gaSelection,...
    'Mutationfunction',@gaMutation,...
    'Crossoverfunction',@gaCrossover,...
    'Hyperfunction',@(ga,gaopt)(0) ...     % To run after each iteration
    );

ga = GA(gaopt);
fprintf('Best point: %.2f with objective %.2f\n',ga.Bestindividual,ga.Bestobjective);

fprintf('Single-objective: 2th function optimizing...\n');
fun = @(x)abs(x);
LB = [-1];  UB = [1]; 

gaopt = struct(...
    'Fitnessfunction', fun,...
    'Featuresize', 1,...
    'Targetsize', 1,...
    'LB',LB, ...
    'UB',UB, ...
    'IntCon',[],...
    'Constraintfunction',@(x)(zeros(size(x,1),1)),...  % No constraint
    'PopulationSize',100,...
    'InitialPopulations',[],...
    'EliteCount',5,...
    'CrossRatio',0.8,...
    'MutationRate',0.2,...
    'MaxIteration',100,...
    'Verbose',false,...
    'TournamentSize',3,...
    'Maxstall',50,...
    'Tolerance',1e-6,...
    'Creationfunction',@gaCreation,...
    'Fitnessscalefunction',@gaFitnessScale,...
    'Distancefunction',@gaPareto,...
    'Selectfunction',@gaSelection,...
    'Mutationfunction',@gaMutation,...
    'Crossoverfunction',@gaCrossover,...
    'Hyperfunction',@(ga,gaopt)(0) ...     % To run after each iteration
    );

ga = GA(gaopt);
fprintf('Best point: %.2f with objective %.2f\n',ga.Bestindividual,ga.Bestobjective);

% Multiple-objective
fprintf('Multiple-objective: 1th function optimizing...\n');
fun = @(x)[x.^2,(x-2).^2];
LB = [0];  UB = [2]; targetsize = 2;

gaopt = struct(...
    'Fitnessfunction', fun,...
    'Featuresize', 1,...
    'Targetsize',targetsize,...
    'LB',LB, ...
    'UB',UB, ...
    'IntCon',[],...
    'Constraintfunction',@(x)(zeros(size(x,1),targetsize)),...  % No constraint
    'PopulationSize',20,...
    'InitialPopulations',[],...
    'EliteCount',5,...
    'CrossRatio',0.8,...
    'MutationRate',0.2,...
    'MaxIteration',10,...
    'Verbose',false,...
    'TournamentSize',3,...
    'Maxstall',50,...
    'Tolerance',1e-6,...
    'Creationfunction',@gaCreation,...
    'Fitnessscalefunction',@gaFitnessScale,...
    'Distancefunction',@gaPareto,...
    'Selectfunction',@gaSelection,...
    'Mutationfunction',@gaMutation,...
    'Crossoverfunction',@gaCrossover,...
    'Hyperfunction',@(ga,gaopt)(0) ...     % To run after each iteration
    );

ga = GA(gaopt);

figure(1);
scatter(ga.ParetoFrontobjectives(:,1),ga.ParetoFrontobjectives(:,2));

fprintf('Multiple-objective: 2th function optimizing...\n');
fun = @(x)([x(:,1).^2+(x(:,2)-2).^2,abs(x(:,1)-2)+(x(:,2)).^2]);
LB = [0,0]; UB = [2,2];
featuresize = 2; targetsize = 2;

gaopt = struct(...
    'Fitnessfunction', fun,...
    'Featuresize', featuresize,...
    'Targetsize',targetsize,...
    'LB',LB, ...
    'UB',UB, ...
    'IntCon',[],...
    'Constraintfunction',@(x)(zeros(size(x,1),targetsize)),...  % No constraint
    'PopulationSize',20,...
    'InitialPopulations',[],...
    'EliteCount',5,...
    'CrossRatio',0.8,...
    'MutationRate',0.2,...
    'MaxIteration',20,...
    'Verbose',false,...
    'TournamentSize',3,...
    'Maxstall',20,...
    'Tolerance',1e-6,...
    'Creationfunction',@gaCreation,...
    'Fitnessscalefunction',@gaFitnessScale,...
    'Distancefunction',@gaPareto,...
    'Selectfunction',@gaSelection,...
    'Mutationfunction',@gaMutation,...
    'Crossoverfunction',@gaCrossover,...
    'Hyperfunction',@(ga,gaopt)(0) ...     % To run after each iteration
    );

ga = GA(gaopt);

figure(2);
scatter(ga.ParetoFrontobjectives(:,1),ga.ParetoFrontobjectives(:,2));